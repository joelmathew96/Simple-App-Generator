/**
 * This file was automatically generated by simpleapp generator. Every
 * MODIFICATION OVERRIDE BY GENERATEOR
 * last change 2023-10-28
 * Author: Ks Tan
 */
import { Module } from '@nestjs/common';
import { MongooseModule } from '@nestjs/mongoose';
import {DocNumberFormatGenerator} from './generate/commons/docnogenerator.service'
import { AuditTrail } from './generate/commons/audittrail.service';
import { CloudapiModule } from 'src/cloudapi/cloudapi.module';
import { PrintapiModule } from 'src/printapi/printapi.module';

import { UserResolverService } from './services/userresolver.service';
// auto import modules
import { TenantService } from './services/tenant.service';    
import { TenantResolver } from './generate/resolvers/tenant.resolver';    
import { TenantController } from './generate/controllers/tenant.controller';    
import { TenantMongoSchema } from './generate/models/tenant.model';
import { OrganizationService } from './services/org.service';    
import { OrganizationResolver } from './generate/resolvers/org.resolver';    
import { OrganizationController } from './generate/controllers/org.controller';    
import { OrganizationMongoSchema } from './generate/models/org.model';
import { BranchService } from './services/branch.service';    
import { BranchResolver } from './generate/resolvers/branch.resolver';    
import { BranchController } from './generate/controllers/branch.controller';    
import { BranchMongoSchema } from './generate/models/branch.model';
import { PermissionService } from './services/perm.service';    
import { PermissionResolver } from './generate/resolvers/perm.resolver';    
import { PermissionController } from './generate/controllers/perm.controller';    
import { PermissionMongoSchema } from './generate/models/perm.model';
import { AutoincreamentService } from './services/autoinc.service';    
import { AutoincreamentResolver } from './generate/resolvers/autoinc.resolver';    
import { AutoincreamentController } from './generate/controllers/autoinc.controller';    
import { AutoincreamentMongoSchema } from './generate/models/autoinc.model';
import { DocnoformatService } from './services/docno.service';    
import { DocnoformatResolver } from './generate/resolvers/docno.resolver';    
import { DocnoformatController } from './generate/controllers/docno.controller';    
import { DocnoformatMongoSchema } from './generate/models/docno.model';
import { SystemmessageService } from './services/sysmsg.service';    
import { SystemmessageResolver } from './generate/resolvers/sysmsg.resolver';    
import { SystemmessageController } from './generate/controllers/sysmsg.controller';    
import { SystemmessageMongoSchema } from './generate/models/sysmsg.model';
import { KeyvaluepairService } from './services/kvpair.service';    
import { KeyvaluepairResolver } from './generate/resolvers/kvpair.resolver';    
import { KeyvaluepairController } from './generate/controllers/kvpair.controller';    
import { KeyvaluepairMongoSchema } from './generate/models/kvpair.model';
import { AccountService } from './services/acc.service';    
import { AccountResolver } from './generate/resolvers/acc.resolver';    
import { AccountController } from './generate/controllers/acc.controller';    
import { AccountMongoSchema } from './generate/models/acc.model';
import { CategoryService } from './services/cat.service';    
import { CategoryResolver } from './generate/resolvers/cat.resolver';    
import { CategoryController } from './generate/controllers/cat.controller';    
import { CategoryMongoSchema } from './generate/models/cat.model';
import { CustomerService } from './services/cust.service';    
import { CustomerResolver } from './generate/resolvers/cust.resolver';    
import { CustomerController } from './generate/controllers/cust.controller';    
import { CustomerMongoSchema } from './generate/models/cust.model';
import { InvoiceService } from './services/inv.service';    
import { InvoiceResolver } from './generate/resolvers/inv.resolver';    
import { InvoiceController } from './generate/controllers/inv.controller';    
import { InvoiceMongoSchema } from './generate/models/inv.model';
import { ProductService } from './services/prd.service';    
import { ProductResolver } from './generate/resolvers/prd.resolver';    
import { ProductController } from './generate/controllers/prd.controller';    
import { ProductMongoSchema } from './generate/models/prd.model';
import { StudentService } from './services/stud.service';    
import { StudentResolver } from './generate/resolvers/stud.resolver';    
import { StudentController } from './generate/controllers/stud.controller';    
import { StudentMongoSchema } from './generate/models/stud.model';
import { UserService } from './services/user.service';    
import { UserResolver } from './generate/resolvers/user.resolver';    
import { UserController } from './generate/controllers/user.controller';    
import { UserMongoSchema } from './generate/models/user.model';
import { ProfileController } from './profile/profile.controller';
import { ProfileService } from './profile/profile.service';
import { WorkflowController } from './generate/workflow/workflow.controller';
import { WorkflowDelegate } from './generate/workflow/workflow.delegate';
import { WorkflowConfig } from './generate/workflow/workflow.config';
import { WorkflowService } from './generate/workflow/workflow.service';
import { WorkflowUserService } from './generate/workflow/workflow.userservice';
import { SimpleAppRobotUserService } from './generate/commons/robotuser.service';
import { SayhelloListenerService } from 'src/simpleapp/workflows/listeners/sayhello.listener';
// import {ServiceModule} from  "../services/service.module"
//import { undefinedService } from '../../generate/undefined/undefined.service';


//import {AutoincreamentModule} from '../autoinc/autoinc.module'//encryption use for model (not class and cant inject, use singleton instead and init as early as possible)

@Module({
  imports: [
  CloudapiModule,
  PrintapiModule,
   MongooseModule.forFeature([
                            { name: 'Tenant', schema: TenantMongoSchema },
                            { name: 'Organization', schema: OrganizationMongoSchema },
                            { name: 'Branch', schema: BranchMongoSchema },
                            { name: 'Permission', schema: PermissionMongoSchema },
                            { name: 'Autoincreament', schema: AutoincreamentMongoSchema },
                            { name: 'Docnoformat', schema: DocnoformatMongoSchema },
                            { name: 'Systemmessage', schema: SystemmessageMongoSchema },
                            { name: 'Keyvaluepair', schema: KeyvaluepairMongoSchema },
                            { name: 'Account', schema: AccountMongoSchema },
                            { name: 'Category', schema: CategoryMongoSchema },
                            { name: 'Customer', schema: CustomerMongoSchema },
                            { name: 'Invoice', schema: InvoiceMongoSchema },
                            { name: 'Product', schema: ProductMongoSchema },
                            { name: 'Student', schema: StudentMongoSchema },
                            { name: 'User', schema: UserMongoSchema },
              ]),
  ],
  controllers: [TenantController,OrganizationController,BranchController,PermissionController,AutoincreamentController,DocnoformatController,SystemmessageController,KeyvaluepairController,AccountController,CategoryController,CustomerController,InvoiceController,ProductController,StudentController,UserController, ProfileController,WorkflowController],
  providers: [
    SimpleAppRobotUserService,
    AuditTrail,DocNumberFormatGenerator,      TenantService,
      TenantResolver,
            OrganizationService,
      OrganizationResolver,
            BranchService,
      BranchResolver,
            PermissionService,
      PermissionResolver,
            AutoincreamentService,
      AutoincreamentResolver,
            DocnoformatService,
      DocnoformatResolver,
            SystemmessageService,
      SystemmessageResolver,
            KeyvaluepairService,
      KeyvaluepairResolver,
            AccountService,
      AccountResolver,
            CategoryService,
      CategoryResolver,
            CustomerService,
      CustomerResolver,
            InvoiceService,
      InvoiceResolver,
            ProductService,
      ProductResolver,
            StudentService,
      StudentResolver,
            UserService,
      UserResolver,
       ProfileService,WorkflowDelegate,WorkflowConfig,WorkflowService,WorkflowUserService,
                     SayhelloListenerService,
     UserResolverService,
  ],
  exports:[SimpleAppRobotUserService,AuditTrail,DocNumberFormatGenerator,    TenantService,
    TenantResolver,
        OrganizationService,
    OrganizationResolver,
        BranchService,
    BranchResolver,
        PermissionService,
    PermissionResolver,
        AutoincreamentService,
    AutoincreamentResolver,
        DocnoformatService,
    DocnoformatResolver,
        SystemmessageService,
    SystemmessageResolver,
        KeyvaluepairService,
    KeyvaluepairResolver,
        AccountService,
    AccountResolver,
        CategoryService,
    CategoryResolver,
        CustomerService,
    CustomerResolver,
        InvoiceService,
    InvoiceResolver,
        ProductService,
    ProductResolver,
        StudentService,
    StudentResolver,
        UserService,
    UserResolver,
     ProfileService,WorkflowDelegate,WorkflowConfig,WorkflowService,WorkflowUserService,UserResolverService,]
})
export class GenerateModule {}
